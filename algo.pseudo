

void chunks(void)
{
    len = lstsize(args); // 500

    chunkssize = len / 5;//  = 100

    1 * 100 - 1  //99

    while 
    

}


void big_algo(stack a, stack b)
{
    t_stack tmp;
    i = 1

    tmp = a;
    chunks = ft_lstsize(a) / 5;
    while (ft_lstsize(a) != 3) // .keep 3 nodes or more but not more than 5
    {
        while ()
        tmp= tmp->next;
        chunks = i * chunks ;
        i++;
    }
    
}


500 / 5
= 100

while (i <= 5)
{
    i * 100;
    i++;
}
    // seudocode big algo;

fin(a, chunk)

min = 0

while (*a)
{
    if(node-)
}

=================================================
int count = 0;

int i = 1;
int chunk = lstsize(*a) / 5; // = 100
int len = lstsize(*a);
while (t)
{
    chunk = i * chunk;
    while (count <= chunk && count <= len)
    {
        find_min
        count++;
    }
    i++;
}